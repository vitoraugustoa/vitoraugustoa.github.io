{"version":3,"sources":["images/logo.png","components/logo/logo.jsx","components/pesquisa/pesquisa.jsx","components/personagens/personagens.jsx","components/paginacao/paginacao.jsx","services/service.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","logo","props","class","src","pngLogo","alt","withStyles","iconButton","color","marginTop","classes","TextField","id","label","className","margin","fullWidth","onChange","event","procurarPersonagens","IconButton","aria-label","Personagens","state","statusColorAlive","statusColorDead","console","log","this","personagens","map","personagem","style","backgroundImage","img","status","backgroundColor","name","nickname","Component","paginacao","ButtonGroup","variant","size","Button","onClick","onClickPaginacao","Api","axios","create","baseURL","App","limite","pagina","bind","buscarPersonagens","get","inicio","then","response","setState","data","nomeCompleto","target","value","nomeParaPequisa","replace","numeroPagina","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.750ca7dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.95a82eee.png\";","import React from 'react';\r\n\r\nimport './logo.css';\r\nimport pngLogo from '../../images/logo.png';\r\n\r\nexport default function logo(props) {\r\n\r\n return (\r\n    <div class=\"logo\">\r\n        <img src={pngLogo} alt=\"Logo breaking bad\"/>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport './pesquisa.css';\r\n\r\nconst styles = {\r\n        iconButton: {\r\n            color:\"#c0c0c0\",\r\n            marginTop:\"20px\"\r\n        }\r\n    };\r\n\r\n function pesquisa(props) {\r\n    const { classes } = props;\r\n    \r\n  return (\r\n    <div class=\"pesquisa\">\r\n        <div>\r\n            <TextField\r\n                color=\"danger\"\r\n                id=\"pesquisa\"\r\n                label=\"Pesquisar personagem\"\r\n                className=\"\"\r\n                margin=\"normal\"\r\n                fullWidth={true}\r\n                onChange={(event) => props.procurarPersonagens(event)}\r\n                />\r\n            <IconButton className={classes.iconButton} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default withStyles(styles)(pesquisa);","import React, { Component } from 'react';\r\n\r\nimport './personagens.css';\r\n\r\nexport default class Personagens extends Component {\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n      statusColorAlive: \"#008f1f\",\r\n      statusColorDead: \"#bd0707\"\r\n    }\r\n  }\r\n\r\n  render(){\r\n    console.log(this.props.personagens);\r\n    return (\r\n      <div className=\"conteudo\"> \r\n              {this.props.personagens.map(personagem => {\r\n                 return (\r\n                  <div className=\"card\">\r\n                    <div style={{backgroundImage: `url(${personagem.img})` }}>\r\n                      <h4 style={ personagem.status === \"Alive\" ? {backgroundColor: this.state.statusColorAlive} : {backgroundColor: this.state.statusColorDead}  }>{ personagem.status }</h4>\r\n                      <h2 className=\"card-conteudo\">{personagem.name}</h2>\r\n                      <h5 className=\"card-conteudo\">Apelido: {personagem.nickname}</h5>\r\n                    </div>\r\n                </div>\r\n                 ); \r\n              })}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport './paginacao.css';\r\n\r\nexport default function paginacao(props) {\r\n  return (\r\n    <div className=\"paginacao\">\r\n        <ButtonGroup color=\"secundary\" variant=\"contained\" className=\"pagina\" size=\"small\" aria-label=\"small outlined button group\">\r\n              <Button onClick={() => props.onClickPaginacao(1)} >1</Button>\r\n              <Button onClick={() => props.onClickPaginacao(2)}>2</Button>\r\n              <Button onClick={() => props.onClickPaginacao(3)}>3</Button>\r\n              <Button onClick={() => props.onClickPaginacao(4)}>4</Button>\r\n              <Button onClick={() => props.onClickPaginacao(5)}>5</Button>\r\n        </ButtonGroup>\r\n    </div>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst Api = axios.create({\r\n    baseURL: 'https://www.breakingbadapi.com/api/',\r\n});\r\n\r\nexport default Api;","import React,  { Component } from 'react';\nimport './App.css';\n\nimport Logo from './components/logo/logo';\nimport Pesquisa from './components/pesquisa/pesquisa';\nimport Personagens from './components/personagens/personagens';\nimport Paginacao from './components/paginacao/paginacao';\nimport Api from './services/service';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      personagens: [{}],\n      paginacao: {\n        limite: 8,\n        pagina: 0\n      }\n    }\n\n    this.onClickPaginacao = this.onClickPaginacao.bind(this);\n    this.buscarPersonagens = this.buscarPersonagens.bind(this);\n    this.procurarPersonagens = this.procurarPersonagens.bind(this);\n  }\n\n  componentWillMount(){\n    this.buscarPersonagens();\n  }\n\n  buscarPersonagens(){\n    Api.get(`/characters?limit=${this.state.paginacao.limite}&offset=${this.state.paginacao.inicio}`)\n    .then(response => {\n      this.setState({personagens: response.data });\n    });\n  }\n\n  procurarPersonagens(event){\n   let nomeCompleto = event.target.value;\n   console.log(nomeCompleto);\n    if(nomeCompleto != \"\"){\n      nomeCompleto = nomeCompleto.replace(/\\s{2,}/g, ' ');\n      let nomeParaPequisa = nomeCompleto.replace(/\\s{1,}/g,\"+\");\n     \n      Api.get(`/characters?name=${nomeParaPequisa}`)\n       .then(response => {\n         this.setState({personagens: response.data });\n       });\n    }else{\n      this.buscarPersonagens()\n    }\n  }\n\n  onClickPaginacao(numeroPagina){\n    this.setState({\n      paginacao: {\n        limite: 8,\n        inicio: numeroPagina === 1 ? 0 : this.state.paginacao.limite * numeroPagina,\n        pagina: numeroPagina,\n      }\n    }, () => this.buscarPersonagens());\n  }\n\n  render() {\n    return (\n      <div class=\"corpo\">\n        <Logo />\n        <Pesquisa procurarPersonagens={this.procurarPersonagens} />\n        <Personagens personagens={this.state.personagens} />\n        <Paginacao onClickPaginacao={this.onClickPaginacao} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}